name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 測試
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4

    - name: 設置 Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 安裝依賴
      run: npm ci

    - name: 運行型別檢查
      run: npm run type-check

    - name: 運行代碼檢查
      run: npm run lint

    - name: 運行測試
      run: npm run test:run

    - name: 檢查代碼格式
      run: npm run format:check

  build:
    name: 建構
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4

    - name: 設置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: 安裝依賴
      run: npm ci

    - name: 建構專案
      run: npm run build

    - name: 上傳建構產物
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  deploy-preview:
    name: 部署預覽
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    steps:
    - name: 檢出代碼
      uses: actions/checkout@v4

    - name: 下載建構產物
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: 部署到 Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./
        scope: ${{ secrets.VERCEL_SCOPE }}
